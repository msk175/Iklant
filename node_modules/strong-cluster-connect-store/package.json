{
  "name": "strong-cluster-connect-store",
  "version": "0.1.4",
  "description": "Implementation of connect session store using node's native cluster messaging",
  "license": "MIT",
  "main": "index.js",
  "scripts": {
    "coverage": "mocha -r blanket -R html-cov > coverage_strong-cluster-connect-store.html",
    "test": "mocha --reporter spec",
    "lint": "jshint *.js test lib"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/strongloop/strong-cluster-connect-store.git"
  },
  "keywords": [
    "connect",
    "express",
    "cluster",
    "session",
    "store"
  ],
  "author": {
    "name": "Miroslav Bajtos",
    "email": "miroslav@strongloop.com"
  },
  "peerDependencies": {
    "strong-store-cluster": "~0.1.0"
  },
  "devDependencies": {
    "mocha": "~1.9.0",
    "jshint": "~2.0.1",
    "blanket": "latest",
    "chai": "~1.7.2",
    "connect": "~2.8.4",
    "strong-store-cluster": "latest",
    "request": "~2.22.0",
    "async": "~0.2.9"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "readme": "# Connect Session Store for Cluster\n\n[![Build Status](https://travis-ci.org/strongloop/strong-cluster-connect-store.png?branch=master)](https://travis-ci.org/strongloop/strong-cluster-connect-store)\n[![NPM version](https://badge.fury.io/js/strong-cluster-connect-store.png)](http://badge.fury.io/js/strong-cluster-connect-store)\n\n## Overview\n\nStrong-cluster-connect-store is an implementation of connect session store\nusing node's native cluster messaging. It provides an easy way for using\nsessions in connect/express based applications running in a node cluster.\n\n### Features\n\n- Supports both connect and express.\n- No dependencies on external services.\n- Module is shipped without connect, it will use *your* version of connect\n  or express.\n- Covered by unit-tests.\n\n## Usage\n\n### Installation\n\n```sh\n$ npm install strong-cluster-connect-store\n```\n\n### Configuration - connect\n\n```js\nvar connect = require('connect');\nvar ClusterStore = require('strong-cluster-connect-store')(connect);\n\nvar app = connect();\napp\n  .use(connect.cookieParser())\n  .use(connect.session({ store: new ClusterStore(), secret: 'keyboard cat' }));\n```\n\n### Configuration - express\n\n```javascript\nvar express = require('express');\nvar ClusterStore = require('strong-cluster-connect-store')(express);\n\nvar app = express();\napp\n  .use(express.cookieParser())\n  .use(express.session({ store: new ClusterStore(), secret: 'keyboard cat' }));\n```\n\n### Setting up the master process\n\nThe store requires that a shared-state server is running in the master process.\nThe server is initialized automatically when you require() this module\nfrom the master. In the case that your master and workers have separate source\nfiles, you must explicitly require this module in your master source file.\nOptionally, you can call `setup()` to make it more obvious why you are loading\na module that is not used anywhere else.\n\n```javascript\n// master.js\n\nvar cluster = require('cluster');\n// etc.\n\nrequire('strong-cluster-connect-store').setup();\n\n// configure your cluster\n// fork the workers\n// etc.\n}\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/strongloop/strong-cluster-connect-store/issues"
  },
  "homepage": "https://github.com/strongloop/strong-cluster-connect-store",
  "_id": "strong-cluster-connect-store@0.1.4",
  "dist": {
    "shasum": "46bbf9e486d97bc05c93e3062983b7c4f854cf6c"
  },
  "_from": "strong-cluster-connect-store@",
  "_resolved": "https://registry.npmjs.org/strong-cluster-connect-store/-/strong-cluster-connect-store-0.1.4.tgz"
}
